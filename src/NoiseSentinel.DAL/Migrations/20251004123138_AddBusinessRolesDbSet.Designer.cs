// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoiseSentinel.DAL.Contexts;

#nullable disable

namespace NoiseSentinel.DAL.Migrations
{
    [DbContext(typeof(NoiseSentinelDbContext))]
    [Migration("20251004123138_AddBusinessRolesDbSet")]
    partial class AddBusinessRolesDbSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Accused", b =>
                {
                    b.Property<int>("AccusedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccusedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccusedId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cnic")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CNIC");

                    b.Property<string>("Contact")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Province")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AccusedId");

                    b.ToTable("ACCUSED", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Case", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseId"));

                    b.Property<string>("CaseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CaseType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Firid")
                        .HasColumnType("int")
                        .HasColumnName("FIRID");

                    b.Property<DateTime?>("HearingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("JudgeId")
                        .HasColumnType("int")
                        .HasColumnName("JudgeID");

                    b.Property<string>("Verdict")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CaseId");

                    b.HasIndex("Firid");

                    b.HasIndex("JudgeId");

                    b.ToTable("CASE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Casestatement", b =>
                {
                    b.Property<int>("StatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatementId"));

                    b.Property<int?>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    b.Property<string>("StatementBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StatementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StatementText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatementId");

                    b.HasIndex("CaseId");

                    b.ToTable("CASESTATEMENT", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Challan", b =>
                {
                    b.Property<int>("ChallanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChallanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChallanId"));

                    b.Property<int?>("AccusedId")
                        .HasColumnType("int")
                        .HasColumnName("AccusedID");

                    b.Property<string>("BankDetails")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DigitalSignatureValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DueDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmissionReportId")
                        .HasColumnType("int")
                        .HasColumnName("EmissionReportID");

                    b.Property<string>("EvidencePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("IssueDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("OfficerId")
                        .HasColumnType("int")
                        .HasColumnName("OfficerID");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    b.Property<int?>("ViolationId")
                        .HasColumnType("int")
                        .HasColumnName("ViolationID");

                    b.HasKey("ChallanId");

                    b.HasIndex("AccusedId");

                    b.HasIndex("EmissionReportId");

                    b.HasIndex("OfficerId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("ViolationId");

                    b.ToTable("CHALLAN", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Court", b =>
                {
                    b.Property<int>("CourtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourtID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourtId"));

                    b.Property<string>("CourtName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CourtTypeID");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Province")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CourtId");

                    b.HasIndex("CourtTypeId");

                    b.ToTable("COURT", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Courttype", b =>
                {
                    b.Property<int>("CourtTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourtTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourtTypeId"));

                    b.Property<string>("CourtTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CourtTypeId");

                    b.ToTable("COURTTYPE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Emissionreport", b =>
                {
                    b.Property<int>("EmissionReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmissionReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmissionReportId"));

                    b.Property<decimal?>("Co")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("CO");

                    b.Property<decimal?>("Co2")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("CO2");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("DeviceID");

                    b.Property<string>("DigitalSignatureValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Hc")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("HC");

                    b.Property<string>("MlClassification")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ml_Classification");

                    b.Property<decimal?>("Nox")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("NOx");

                    b.Property<decimal?>("SoundLevelDBa")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("SoundLevel_dBA");

                    b.Property<DateTime?>("TestDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("EmissionReportId");

                    b.HasIndex("DeviceId");

                    b.ToTable("EMISSIONREPORT", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Fir", b =>
                {
                    b.Property<int>("Firid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FIRID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Firid"));

                    b.Property<int?>("ChallanId")
                        .HasColumnType("int")
                        .HasColumnName("ChallanID");

                    b.Property<DateTime?>("DateFiled")
                        .HasColumnType("datetime");

                    b.Property<string>("Firdescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FIRDescription");

                    b.Property<string>("Firno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRNo");

                    b.Property<string>("Firstatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FIRStatus");

                    b.Property<int?>("InformantId")
                        .HasColumnType("int")
                        .HasColumnName("InformantID");

                    b.Property<string>("InvestigationReport")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.HasKey("Firid");

                    b.HasIndex("ChallanId");

                    b.HasIndex("InformantId");

                    b.HasIndex("StationId");

                    b.ToTable("FIR", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Iotdevice", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("DeviceName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsCalibrated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PairingDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("DeviceId");

                    b.ToTable("IOTDEVICE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Judge", b =>
                {
                    b.Property<int>("JudgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JudgeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JudgeId"));

                    b.Property<string>("Cnic")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CNIC");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CourtId")
                        .HasColumnType("int")
                        .HasColumnName("CourtID");

                    b.Property<string>("Rank")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ServiceStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("JudgeId");

                    b.HasIndex("CourtId");

                    b.HasIndex("UserId");

                    b.ToTable("JUDGE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Policeofficer", b =>
                {
                    b.Property<int>("OfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfficerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficerId"));

                    b.Property<string>("BadgeNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cnic")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CNIC");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsInvestigationOfficer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Rank")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OfficerId");

                    b.HasIndex("StationId");

                    b.HasIndex("UserId");

                    b.ToTable("POLICEOFFICER", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Policestation", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Province")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StationId");

                    b.ToTable("POLICESTATION", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("ROLE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Username");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PasswordHash");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique()
                        .HasDatabaseName("EmailIndex")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[Username] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("ChasisNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Make")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    b.Property<string>("PlateNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VehRegYear")
                        .HasColumnType("datetime")
                        .HasColumnName("Veh_Reg_Year");

                    b.HasKey("VehicleId");

                    b.HasIndex("OwnerId");

                    b.ToTable("VEHICLE", (string)null);
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Violation", b =>
                {
                    b.Property<int>("ViolationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViolationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViolationId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsCognizable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PenaltyAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("SectionOfLaw")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ViolationType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ViolationId");

                    b.ToTable("VIOLATION", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoiseSentinel.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Case", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Fir", "Fir")
                        .WithMany("Cases")
                        .HasForeignKey("Firid");

                    b.HasOne("NoiseSentinel.DAL.Models.Judge", "Judge")
                        .WithMany("Cases")
                        .HasForeignKey("JudgeId");

                    b.Navigation("Fir");

                    b.Navigation("Judge");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Casestatement", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Case", "Case")
                        .WithMany("Casestatements")
                        .HasForeignKey("CaseId");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Challan", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Accused", "Accused")
                        .WithMany("Challans")
                        .HasForeignKey("AccusedId");

                    b.HasOne("NoiseSentinel.DAL.Models.Emissionreport", "EmissionReport")
                        .WithMany("Challans")
                        .HasForeignKey("EmissionReportId");

                    b.HasOne("NoiseSentinel.DAL.Models.Policeofficer", "Officer")
                        .WithMany("Challans")
                        .HasForeignKey("OfficerId");

                    b.HasOne("NoiseSentinel.DAL.Models.Vehicle", "Vehicle")
                        .WithMany("Challans")
                        .HasForeignKey("VehicleId");

                    b.HasOne("NoiseSentinel.DAL.Models.Violation", "Violation")
                        .WithMany("Challans")
                        .HasForeignKey("ViolationId");

                    b.Navigation("Accused");

                    b.Navigation("EmissionReport");

                    b.Navigation("Officer");

                    b.Navigation("Vehicle");

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Court", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Courttype", "CourtType")
                        .WithMany("Courts")
                        .HasForeignKey("CourtTypeId");

                    b.Navigation("CourtType");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Emissionreport", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Iotdevice", "Device")
                        .WithMany("Emissionreports")
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Fir", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Challan", "Challan")
                        .WithMany("Firs")
                        .HasForeignKey("ChallanId");

                    b.HasOne("NoiseSentinel.DAL.Models.Policeofficer", "Informant")
                        .WithMany("Firs")
                        .HasForeignKey("InformantId");

                    b.HasOne("NoiseSentinel.DAL.Models.Policestation", "Station")
                        .WithMany("Firs")
                        .HasForeignKey("StationId");

                    b.Navigation("Challan");

                    b.Navigation("Informant");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Judge", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Court", "Court")
                        .WithMany("Judges")
                        .HasForeignKey("CourtId");

                    b.HasOne("NoiseSentinel.DAL.Models.User", "User")
                        .WithMany("Judges")
                        .HasForeignKey("UserId");

                    b.Navigation("Court");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Policeofficer", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Policestation", "Station")
                        .WithMany("Policeofficers")
                        .HasForeignKey("StationId");

                    b.HasOne("NoiseSentinel.DAL.Models.User", "User")
                        .WithMany("Policeofficers")
                        .HasForeignKey("UserId");

                    b.Navigation("Station");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.User", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Vehicle", b =>
                {
                    b.HasOne("NoiseSentinel.DAL.Models.Accused", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Accused", b =>
                {
                    b.Navigation("Challans");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Case", b =>
                {
                    b.Navigation("Casestatements");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Challan", b =>
                {
                    b.Navigation("Firs");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Court", b =>
                {
                    b.Navigation("Judges");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Courttype", b =>
                {
                    b.Navigation("Courts");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Emissionreport", b =>
                {
                    b.Navigation("Challans");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Fir", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Iotdevice", b =>
                {
                    b.Navigation("Emissionreports");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Judge", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Policeofficer", b =>
                {
                    b.Navigation("Challans");

                    b.Navigation("Firs");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Policestation", b =>
                {
                    b.Navigation("Firs");

                    b.Navigation("Policeofficers");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.User", b =>
                {
                    b.Navigation("Judges");

                    b.Navigation("Policeofficers");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Vehicle", b =>
                {
                    b.Navigation("Challans");
                });

            modelBuilder.Entity("NoiseSentinel.DAL.Models.Violation", b =>
                {
                    b.Navigation("Challans");
                });
#pragma warning restore 612, 618
        }
    }
}
